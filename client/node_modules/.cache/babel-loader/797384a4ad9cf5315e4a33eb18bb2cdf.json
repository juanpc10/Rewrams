{"ast":null,"code":"var _jsxFileName = \"/Users/juanpc10/Desktop/soloProject/rewrams/client/src/about/carousel/ParallaxSlide.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\n\nconst calculateMargin = (selfIndex, slideIndex, speed = 50) => {\n  const diff = selfIndex - slideIndex;\n  if (Math.abs(diff) > 1) return 0;\n  return `${diff * speed}%`;\n};\n\nconst ParallaxSlide = ({\n  transition,\n  children,\n  renderElements,\n  ...props\n}) => {\n  const [index, setIndex] = useState(0);\n  const [fineIndex, setFineIndex] = useState(index);\n\n  const onChangeIndex = i => {\n    setIndex(i);\n    setFineIndex(i);\n  };\n\n  const views = children({\n    fineIndex,\n    injectStyle: (slideIndex, speed) => ({\n      marginLeft: calculateMargin(slideIndex, fineIndex, speed),\n      transition: fineIndex === index ? transition : 'none'\n    })\n  });\n  const isSingleView = views.length < 2;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SwipeableViews, Object.assign({\n    disabled: isSingleView,\n    resistance: true,\n    springConfig: {\n      duration: '0.6s',\n      easeFunction: '',\n      delay: '0s'\n    },\n    enableMouseEvents: true\n  }, props, {\n    index: index,\n    onChangeIndex: onChangeIndex,\n    onSwitching: i => {\n      setFineIndex(i);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), views), !isSingleView && renderElements({\n    index,\n    onChangeIndex\n  }));\n};\n\nParallaxSlide.propTypes = {\n  transition: PropTypes.string,\n  children: PropTypes.func.isRequired,\n  renderElements: PropTypes.func\n};\nParallaxSlide.defaultProps = {\n  transition: '0.8s',\n  renderElements: () => {}\n};\nexport default ParallaxSlide;","map":{"version":3,"sources":["/Users/juanpc10/Desktop/soloProject/rewrams/client/src/about/carousel/ParallaxSlide.js"],"names":["React","useState","PropTypes","SwipeableViews","calculateMargin","selfIndex","slideIndex","speed","diff","Math","abs","ParallaxSlide","transition","children","renderElements","props","index","setIndex","fineIndex","setFineIndex","onChangeIndex","i","views","injectStyle","marginLeft","isSingleView","length","duration","easeFunction","delay","propTypes","string","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AACA,MAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,KAAK,GAAG,EAAhC,KAAuC;AAC7D,QAAMC,IAAI,GAAGH,SAAS,GAAGC,UAAzB;AACA,MAAIG,IAAI,CAACC,GAAL,CAASF,IAAT,IAAiB,CAArB,EAAwB,OAAO,CAAP;AACxB,SAAQ,GAAEA,IAAI,GAAGD,KAAM,GAAvB;AACD,CAJD;;AAKA,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,cAAxB;AAAwC,KAAGC;AAA3C,CAAD,KAAwD;AAC5E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAACe,KAAD,CAA1C;;AACA,QAAMI,aAAa,GAAGC,CAAC,IAAI;AACzBJ,IAAAA,QAAQ,CAACI,CAAD,CAAR;AACAF,IAAAA,YAAY,CAACE,CAAD,CAAZ;AACD,GAHD;;AAIA,QAAMC,KAAK,GAAGT,QAAQ,CAAC;AACrBK,IAAAA,SADqB;AAErBK,IAAAA,WAAW,EAAE,CAACjB,UAAD,EAAaC,KAAb,MAAwB;AACnCiB,MAAAA,UAAU,EAAEpB,eAAe,CAACE,UAAD,EAAaY,SAAb,EAAwBX,KAAxB,CADQ;AAEnCK,MAAAA,UAAU,EAAEM,SAAS,KAAKF,KAAd,GAAsBJ,UAAtB,GAAmC;AAFZ,KAAxB;AAFQ,GAAD,CAAtB;AAOA,QAAMa,YAAY,GAAGH,KAAK,CAACI,MAAN,GAAe,CAApC;AACA,sBACE,uDACE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAED,YADZ;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,YAAY,EAAE;AACZE,MAAAA,QAAQ,EAAE,MADE;AAEZC,MAAAA,YAAY,EAAE,EAFF;AAGZC,MAAAA,KAAK,EAAE;AAHK,KAHhB;AAQE,IAAA,iBAAiB;AARnB,KASMd,KATN;AAUE,IAAA,KAAK,EAAEC,KAVT;AAWE,IAAA,aAAa,EAAEI,aAXjB;AAYE,IAAA,WAAW,EAAEC,CAAC,IAAI;AAChBF,MAAAA,YAAY,CAACE,CAAD,CAAZ;AACD,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBGC,KAhBH,CADF,EAmBG,CAACG,YAAD,IAAiBX,cAAc,CAAC;AAAEE,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAD,CAnBlC,CADF;AAuBD,CAtCD;;AAuCAT,aAAa,CAACmB,SAAd,GAA0B;AACxBlB,EAAAA,UAAU,EAAEV,SAAS,CAAC6B,MADE;AAExBlB,EAAAA,QAAQ,EAAEX,SAAS,CAAC8B,IAAV,CAAeC,UAFD;AAGxBnB,EAAAA,cAAc,EAAEZ,SAAS,CAAC8B;AAHF,CAA1B;AAKArB,aAAa,CAACuB,YAAd,GAA6B;AAC3BtB,EAAAA,UAAU,EAAE,MADe;AAE3BE,EAAAA,cAAc,EAAE,MAAM,CAAE;AAFG,CAA7B;AAIA,eAAeH,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nconst calculateMargin = (selfIndex, slideIndex, speed = 50) => {\n  const diff = selfIndex - slideIndex;\n  if (Math.abs(diff) > 1) return 0;\n  return `${diff * speed}%`;\n};\nconst ParallaxSlide = ({ transition, children, renderElements, ...props }) => {\n  const [index, setIndex] = useState(0);\n  const [fineIndex, setFineIndex] = useState(index);\n  const onChangeIndex = i => {\n    setIndex(i);\n    setFineIndex(i);\n  };\n  const views = children({\n    fineIndex,\n    injectStyle: (slideIndex, speed) => ({\n      marginLeft: calculateMargin(slideIndex, fineIndex, speed),\n      transition: fineIndex === index ? transition : 'none',\n    }),\n  });\n  const isSingleView = views.length < 2;\n  return (\n    <>\n      <SwipeableViews\n        disabled={isSingleView}\n        resistance\n        springConfig={{\n          duration: '0.6s',\n          easeFunction: '',\n          delay: '0s',\n        }}\n        enableMouseEvents\n        {...props}\n        index={index}\n        onChangeIndex={onChangeIndex}\n        onSwitching={i => {\n          setFineIndex(i);\n        }}\n      >\n        {views}\n      </SwipeableViews>\n      {!isSingleView && renderElements({ index, onChangeIndex })}\n    </>\n  );\n};\nParallaxSlide.propTypes = {\n  transition: PropTypes.string,\n  children: PropTypes.func.isRequired,\n  renderElements: PropTypes.func,\n};\nParallaxSlide.defaultProps = {\n  transition: '0.8s',\n  renderElements: () => {},\n};\nexport default ParallaxSlide;"]},"metadata":{},"sourceType":"module"}